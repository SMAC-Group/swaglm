% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{swaglm}
\alias{swaglm}
\title{sawglm}
\usage{
swaglm(
  X,
  y,
  p_max = 2L,
  family = NULL,
  method = 0L,
  alpha = 0.3,
  verbose = FALSE,
  seed = 123L
)
}
\arguments{
\item{X}{A numeric \code{matrix} of predictors.}

\item{y}{A numeric \code{vector} of responses.}

\item{p_max}{A \code{integer} specifying the maximum dimension to explore}

\item{family}{A \code{family} object. Default is binomial.}

\item{method}{An \code{integer} scalar with value 0 for the column-pivoted QR decomposition, 1 for the unpivoted QR decomposition, 2 for the LLT Cholesky, or 3 for the LDLT Cholesky}

\item{alpha}{a \code{double} specifying the quantile of the criterion used to select models which are employed to construct models to explore at the next dimension}

\item{verbose}{A \code{boolean} used to control verbose}

\item{seed}{A \code{int} that is the random seed used when creating the set of model to explore for the next dimension}
}
\value{
A list of list of matrices. The first list corresponds to the estimated coefficients per models per dimension. At each dimension, the matrix of estimated coefficient including the intercept for each models.
models are listed per lines and estimated coefficients on each columns. Second list is the list of AIC criterion values for evaluated models at eahc dimension. Each entries of that List is a matrix of a single column where for each row is indicated the criterion value evaluated at this models.
Third list is the list of matrices that specify the combinations of variables explored at each dimension. On this list, each entry correspond to a dimension, the matrix for each dimension indicates on the row the combinations of variables explored and on the columns the variables composing each model represented per each row.
Fouth entry on the List of Lists is the List corresponding to xxx.
}
\description{
Run the SWAG algorithm supporting Generalized Linear Models specified by a family object and using fastglm library.
}
